#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Muenzhaus2
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Muenzhaus2")]
	public partial class LinqDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnCreated();
    partial void InsertAuktion(Auktion instance);
    partial void UpdateAuktion(Auktion instance);
    partial void DeleteAuktion(Auktion instance);
    partial void InsertZeile(Zeile instance);
    partial void UpdateZeile(Zeile instance);
    partial void DeleteZeile(Zeile instance);
    partial void InsertGebot(Gebot instance);
    partial void UpdateGebot(Gebot instance);
    partial void DeleteGebot(Gebot instance);
    partial void InsertKunden(Kunden instance);
    partial void UpdateKunden(Kunden instance);
    partial void DeleteKunden(Kunden instance);
    partial void InsertLose(Lose instance);
    partial void UpdateLose(Lose instance);
    partial void DeleteLose(Lose instance);
    partial void InsertSchriftliches_Gebot(Schriftliches_Gebot instance);
    partial void UpdateSchriftliches_Gebot(Schriftliches_Gebot instance);
    partial void DeleteSchriftliches_Gebot(Schriftliches_Gebot instance);
    partial void InsertUsers(Users instance);
    partial void UpdateUsers(Users instance);
    partial void DeleteUsers(Users instance);
    #endregion
		
		public LinqDBDataContext() : 
				base(global::Muenzhaus2.Properties.Settings.Default.Muenzhaus2ConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Auktion> Auktion
		{
			get
			{
				return this.GetTable<Auktion>();
			}
		}
		
		public System.Data.Linq.Table<Zeile> Zeile
		{
			get
			{
				return this.GetTable<Zeile>();
			}
		}
		
		public System.Data.Linq.Table<Gebot> Gebot
		{
			get
			{
				return this.GetTable<Gebot>();
			}
		}
		
		public System.Data.Linq.Table<Kunden> Kunden
		{
			get
			{
				return this.GetTable<Kunden>();
			}
		}
		
		public System.Data.Linq.Table<Lose> Lose
		{
			get
			{
				return this.GetTable<Lose>();
			}
		}
		
		public System.Data.Linq.Table<Schriftliches_Gebot> Schriftliches_Gebot
		{
			get
			{
				return this.GetTable<Schriftliches_Gebot>();
			}
		}
		
		public System.Data.Linq.Table<Users> Users
		{
			get
			{
				return this.GetTable<Users>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Auktion")]
	public partial class Auktion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AuktionsNummer;
		
		private int _Plz;
		
		private string _Ort;
		
		private string _Strasse;
		
		private byte _Hausnummer;
		
		private string _GebaeudeBezeichnung;
		
		private System.DateTime _Datum;
		
		private string _Bemerkung;
		
		private EntitySet<Lose> _Lose;
		
		private EntitySet<Schriftliches_Gebot> _Schriftliches_Gebot;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuktionsNummerChanging(int value);
    partial void OnAuktionsNummerChanged();
    partial void OnPlzChanging(int value);
    partial void OnPlzChanged();
    partial void OnOrtChanging(string value);
    partial void OnOrtChanged();
    partial void OnStrasseChanging(string value);
    partial void OnStrasseChanged();
    partial void OnHausnummerChanging(byte value);
    partial void OnHausnummerChanged();
    partial void OnGebaeudeBezeichnungChanging(string value);
    partial void OnGebaeudeBezeichnungChanged();
    partial void OnDatumChanging(System.DateTime value);
    partial void OnDatumChanged();
    partial void OnBemerkungChanging(string value);
    partial void OnBemerkungChanged();
    #endregion
		
		public Auktion()
		{
			this._Lose = new EntitySet<Lose>(new Action<Lose>(this.attach_Lose), new Action<Lose>(this.detach_Lose));
			this._Schriftliches_Gebot = new EntitySet<Schriftliches_Gebot>(new Action<Schriftliches_Gebot>(this.attach_Schriftliches_Gebot), new Action<Schriftliches_Gebot>(this.detach_Schriftliches_Gebot));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuktionsNummer", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AuktionsNummer
		{
			get
			{
				return this._AuktionsNummer;
			}
			set
			{
				if ((this._AuktionsNummer != value))
				{
					this.OnAuktionsNummerChanging(value);
					this.SendPropertyChanging();
					this._AuktionsNummer = value;
					this.SendPropertyChanged("AuktionsNummer");
					this.OnAuktionsNummerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Plz", DbType="Int NOT NULL")]
		public int Plz
		{
			get
			{
				return this._Plz;
			}
			set
			{
				if ((this._Plz != value))
				{
					this.OnPlzChanging(value);
					this.SendPropertyChanging();
					this._Plz = value;
					this.SendPropertyChanged("Plz");
					this.OnPlzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ort", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Ort
		{
			get
			{
				return this._Ort;
			}
			set
			{
				if ((this._Ort != value))
				{
					this.OnOrtChanging(value);
					this.SendPropertyChanging();
					this._Ort = value;
					this.SendPropertyChanged("Ort");
					this.OnOrtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Strasse", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Strasse
		{
			get
			{
				return this._Strasse;
			}
			set
			{
				if ((this._Strasse != value))
				{
					this.OnStrasseChanging(value);
					this.SendPropertyChanging();
					this._Strasse = value;
					this.SendPropertyChanged("Strasse");
					this.OnStrasseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hausnummer", DbType="TinyInt NOT NULL")]
		public byte Hausnummer
		{
			get
			{
				return this._Hausnummer;
			}
			set
			{
				if ((this._Hausnummer != value))
				{
					this.OnHausnummerChanging(value);
					this.SendPropertyChanging();
					this._Hausnummer = value;
					this.SendPropertyChanged("Hausnummer");
					this.OnHausnummerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GebaeudeBezeichnung", DbType="VarChar(50)")]
		public string GebaeudeBezeichnung
		{
			get
			{
				return this._GebaeudeBezeichnung;
			}
			set
			{
				if ((this._GebaeudeBezeichnung != value))
				{
					this.OnGebaeudeBezeichnungChanging(value);
					this.SendPropertyChanging();
					this._GebaeudeBezeichnung = value;
					this.SendPropertyChanged("GebaeudeBezeichnung");
					this.OnGebaeudeBezeichnungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Datum", DbType="Date NOT NULL")]
		public System.DateTime Datum
		{
			get
			{
				return this._Datum;
			}
			set
			{
				if ((this._Datum != value))
				{
					this.OnDatumChanging(value);
					this.SendPropertyChanging();
					this._Datum = value;
					this.SendPropertyChanged("Datum");
					this.OnDatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bemerkung", DbType="VarChar(50)")]
		public string Bemerkung
		{
			get
			{
				return this._Bemerkung;
			}
			set
			{
				if ((this._Bemerkung != value))
				{
					this.OnBemerkungChanging(value);
					this.SendPropertyChanging();
					this._Bemerkung = value;
					this.SendPropertyChanged("Bemerkung");
					this.OnBemerkungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Auktion_Lose", Storage="_Lose", ThisKey="AuktionsNummer", OtherKey="AuktionsNummer")]
		public EntitySet<Lose> Lose
		{
			get
			{
				return this._Lose;
			}
			set
			{
				this._Lose.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Auktion_Schriftliches_Gebot", Storage="_Schriftliches_Gebot", ThisKey="AuktionsNummer", OtherKey="AuktionsNummer")]
		public EntitySet<Schriftliches_Gebot> Schriftliches_Gebot
		{
			get
			{
				return this._Schriftliches_Gebot;
			}
			set
			{
				this._Schriftliches_Gebot.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Lose(Lose entity)
		{
			this.SendPropertyChanging();
			entity.Auktion = this;
		}
		
		private void detach_Lose(Lose entity)
		{
			this.SendPropertyChanging();
			entity.Auktion = null;
		}
		
		private void attach_Schriftliches_Gebot(Schriftliches_Gebot entity)
		{
			this.SendPropertyChanging();
			entity.Auktion = this;
		}
		
		private void detach_Schriftliches_Gebot(Schriftliches_Gebot entity)
		{
			this.SendPropertyChanging();
			entity.Auktion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Zeile")]
	public partial class Zeile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Kundennummer;
		
		private int _AuktionsNummer;
		
		private string _Bemerkung;
		
		private EntitySet<Gebot> _Gebot;
		
		private EntityRef<Schriftliches_Gebot> _Schriftliches_Gebot;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnKundennummerChanging(int value);
    partial void OnKundennummerChanged();
    partial void OnAuktionsNummerChanging(int value);
    partial void OnAuktionsNummerChanged();
    partial void OnBemerkungChanging(string value);
    partial void OnBemerkungChanged();
    #endregion
		
		public Zeile()
		{
			this._Gebot = new EntitySet<Gebot>(new Action<Gebot>(this.attach_Gebot), new Action<Gebot>(this.detach_Gebot));
			this._Schriftliches_Gebot = default(EntityRef<Schriftliches_Gebot>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kundennummer", DbType="Int NOT NULL")]
		public int Kundennummer
		{
			get
			{
				return this._Kundennummer;
			}
			set
			{
				if ((this._Kundennummer != value))
				{
					if (this._Schriftliches_Gebot.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKundennummerChanging(value);
					this.SendPropertyChanging();
					this._Kundennummer = value;
					this.SendPropertyChanged("Kundennummer");
					this.OnKundennummerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuktionsNummer", DbType="Int NOT NULL")]
		public int AuktionsNummer
		{
			get
			{
				return this._AuktionsNummer;
			}
			set
			{
				if ((this._AuktionsNummer != value))
				{
					if (this._Schriftliches_Gebot.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuktionsNummerChanging(value);
					this.SendPropertyChanging();
					this._AuktionsNummer = value;
					this.SendPropertyChanged("AuktionsNummer");
					this.OnAuktionsNummerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bemerkung", DbType="VarChar(100)")]
		public string Bemerkung
		{
			get
			{
				return this._Bemerkung;
			}
			set
			{
				if ((this._Bemerkung != value))
				{
					this.OnBemerkungChanging(value);
					this.SendPropertyChanging();
					this._Bemerkung = value;
					this.SendPropertyChanged("Bemerkung");
					this.OnBemerkungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zeile_Gebot", Storage="_Gebot", ThisKey="Id", OtherKey="ZeileId")]
		public EntitySet<Gebot> Gebot
		{
			get
			{
				return this._Gebot;
			}
			set
			{
				this._Gebot.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schriftliches_Gebot_Zeile", Storage="_Schriftliches_Gebot", ThisKey="Kundennummer,AuktionsNummer", OtherKey="Kundennummer,AuktionsNummer", IsForeignKey=true)]
		public Schriftliches_Gebot Schriftliches_Gebot
		{
			get
			{
				return this._Schriftliches_Gebot.Entity;
			}
			set
			{
				Schriftliches_Gebot previousValue = this._Schriftliches_Gebot.Entity;
				if (((previousValue != value) 
							|| (this._Schriftliches_Gebot.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Schriftliches_Gebot.Entity = null;
						previousValue.Zeile.Remove(this);
					}
					this._Schriftliches_Gebot.Entity = value;
					if ((value != null))
					{
						value.Zeile.Add(this);
						this._Kundennummer = value.Kundennummer;
						this._AuktionsNummer = value.AuktionsNummer;
					}
					else
					{
						this._Kundennummer = default(int);
						this._AuktionsNummer = default(int);
					}
					this.SendPropertyChanged("Schriftliches_Gebot");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Gebot(Gebot entity)
		{
			this.SendPropertyChanging();
			entity.Zeile = this;
		}
		
		private void detach_Gebot(Gebot entity)
		{
			this.SendPropertyChanging();
			entity.Zeile = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Gebot")]
	public partial class Gebot : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ZeileId;
		
		private int _LosId;
		
		private int _AuktionsNummer;
		
		private int _HoechstsGebot;
		
		private System.Nullable<bool> _Zuschlag;
		
		private EntityRef<Zeile> _Zeile;
		
		private EntityRef<Lose> _Lose;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnZeileIdChanging(int value);
    partial void OnZeileIdChanged();
    partial void OnLosIdChanging(int value);
    partial void OnLosIdChanged();
    partial void OnAuktionsNummerChanging(int value);
    partial void OnAuktionsNummerChanged();
    partial void OnHoechstsGebotChanging(int value);
    partial void OnHoechstsGebotChanged();
    partial void OnZuschlagChanging(System.Nullable<bool> value);
    partial void OnZuschlagChanged();
    #endregion
		
		public Gebot()
		{
			this._Zeile = default(EntityRef<Zeile>);
			this._Lose = default(EntityRef<Lose>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZeileId", DbType="Int NOT NULL")]
		public int ZeileId
		{
			get
			{
				return this._ZeileId;
			}
			set
			{
				if ((this._ZeileId != value))
				{
					if (this._Zeile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnZeileIdChanging(value);
					this.SendPropertyChanging();
					this._ZeileId = value;
					this.SendPropertyChanged("ZeileId");
					this.OnZeileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LosId", DbType="Int NOT NULL")]
		public int LosId
		{
			get
			{
				return this._LosId;
			}
			set
			{
				if ((this._LosId != value))
				{
					if (this._Lose.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLosIdChanging(value);
					this.SendPropertyChanging();
					this._LosId = value;
					this.SendPropertyChanged("LosId");
					this.OnLosIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuktionsNummer", DbType="Int NOT NULL")]
		public int AuktionsNummer
		{
			get
			{
				return this._AuktionsNummer;
			}
			set
			{
				if ((this._AuktionsNummer != value))
				{
					if (this._Lose.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuktionsNummerChanging(value);
					this.SendPropertyChanging();
					this._AuktionsNummer = value;
					this.SendPropertyChanged("AuktionsNummer");
					this.OnAuktionsNummerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoechstsGebot", DbType="Int NOT NULL")]
		public int HoechstsGebot
		{
			get
			{
				return this._HoechstsGebot;
			}
			set
			{
				if ((this._HoechstsGebot != value))
				{
					this.OnHoechstsGebotChanging(value);
					this.SendPropertyChanging();
					this._HoechstsGebot = value;
					this.SendPropertyChanged("HoechstsGebot");
					this.OnHoechstsGebotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zuschlag", DbType="Bit")]
		public System.Nullable<bool> Zuschlag
		{
			get
			{
				return this._Zuschlag;
			}
			set
			{
				if ((this._Zuschlag != value))
				{
					this.OnZuschlagChanging(value);
					this.SendPropertyChanging();
					this._Zuschlag = value;
					this.SendPropertyChanged("Zuschlag");
					this.OnZuschlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zeile_Gebot", Storage="_Zeile", ThisKey="ZeileId", OtherKey="Id", IsForeignKey=true)]
		public Zeile Zeile
		{
			get
			{
				return this._Zeile.Entity;
			}
			set
			{
				Zeile previousValue = this._Zeile.Entity;
				if (((previousValue != value) 
							|| (this._Zeile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Zeile.Entity = null;
						previousValue.Gebot.Remove(this);
					}
					this._Zeile.Entity = value;
					if ((value != null))
					{
						value.Gebot.Add(this);
						this._ZeileId = value.Id;
					}
					else
					{
						this._ZeileId = default(int);
					}
					this.SendPropertyChanged("Zeile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lose_Gebot", Storage="_Lose", ThisKey="LosId,AuktionsNummer", OtherKey="LosNummer,AuktionsNummer", IsForeignKey=true)]
		public Lose Lose
		{
			get
			{
				return this._Lose.Entity;
			}
			set
			{
				Lose previousValue = this._Lose.Entity;
				if (((previousValue != value) 
							|| (this._Lose.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lose.Entity = null;
						previousValue.Gebot.Remove(this);
					}
					this._Lose.Entity = value;
					if ((value != null))
					{
						value.Gebot.Add(this);
						this._LosId = value.LosNummer;
						this._AuktionsNummer = value.AuktionsNummer;
					}
					else
					{
						this._LosId = default(int);
						this._AuktionsNummer = default(int);
					}
					this.SendPropertyChanged("Lose");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kunden")]
	public partial class Kunden : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Kundennummer;
		
		private string _Name;
		
		private string _Vorname;
		
		private int _Plz;
		
		private string _Ort;
		
		private string _Strasse;
		
		private byte _Hausnummer;
		
		private string _Land;
		
		private EntitySet<Lose> _Lose;
		
		private EntitySet<Schriftliches_Gebot> _Schriftliches_Gebot;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKundennummerChanging(int value);
    partial void OnKundennummerChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnVornameChanging(string value);
    partial void OnVornameChanged();
    partial void OnPlzChanging(int value);
    partial void OnPlzChanged();
    partial void OnOrtChanging(string value);
    partial void OnOrtChanged();
    partial void OnStrasseChanging(string value);
    partial void OnStrasseChanged();
    partial void OnHausnummerChanging(byte value);
    partial void OnHausnummerChanged();
    partial void OnLandChanging(string value);
    partial void OnLandChanged();
    #endregion
		
		public Kunden()
		{
			this._Lose = new EntitySet<Lose>(new Action<Lose>(this.attach_Lose), new Action<Lose>(this.detach_Lose));
			this._Schriftliches_Gebot = new EntitySet<Schriftliches_Gebot>(new Action<Schriftliches_Gebot>(this.attach_Schriftliches_Gebot), new Action<Schriftliches_Gebot>(this.detach_Schriftliches_Gebot));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kundennummer", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Kundennummer
		{
			get
			{
				return this._Kundennummer;
			}
			set
			{
				if ((this._Kundennummer != value))
				{
					this.OnKundennummerChanging(value);
					this.SendPropertyChanging();
					this._Kundennummer = value;
					this.SendPropertyChanged("Kundennummer");
					this.OnKundennummerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vorname", DbType="VarChar(50)")]
		public string Vorname
		{
			get
			{
				return this._Vorname;
			}
			set
			{
				if ((this._Vorname != value))
				{
					this.OnVornameChanging(value);
					this.SendPropertyChanging();
					this._Vorname = value;
					this.SendPropertyChanged("Vorname");
					this.OnVornameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Plz", DbType="Int NOT NULL")]
		public int Plz
		{
			get
			{
				return this._Plz;
			}
			set
			{
				if ((this._Plz != value))
				{
					this.OnPlzChanging(value);
					this.SendPropertyChanging();
					this._Plz = value;
					this.SendPropertyChanged("Plz");
					this.OnPlzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ort", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Ort
		{
			get
			{
				return this._Ort;
			}
			set
			{
				if ((this._Ort != value))
				{
					this.OnOrtChanging(value);
					this.SendPropertyChanging();
					this._Ort = value;
					this.SendPropertyChanged("Ort");
					this.OnOrtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Strasse", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Strasse
		{
			get
			{
				return this._Strasse;
			}
			set
			{
				if ((this._Strasse != value))
				{
					this.OnStrasseChanging(value);
					this.SendPropertyChanging();
					this._Strasse = value;
					this.SendPropertyChanged("Strasse");
					this.OnStrasseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hausnummer", DbType="TinyInt NOT NULL")]
		public byte Hausnummer
		{
			get
			{
				return this._Hausnummer;
			}
			set
			{
				if ((this._Hausnummer != value))
				{
					this.OnHausnummerChanging(value);
					this.SendPropertyChanging();
					this._Hausnummer = value;
					this.SendPropertyChanged("Hausnummer");
					this.OnHausnummerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Land", DbType="VarChar(50)")]
		public string Land
		{
			get
			{
				return this._Land;
			}
			set
			{
				if ((this._Land != value))
				{
					this.OnLandChanging(value);
					this.SendPropertyChanging();
					this._Land = value;
					this.SendPropertyChanged("Land");
					this.OnLandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kunden_Lose", Storage="_Lose", ThisKey="Kundennummer", OtherKey="Kaeufer")]
		public EntitySet<Lose> Lose
		{
			get
			{
				return this._Lose;
			}
			set
			{
				this._Lose.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kunden_Schriftliches_Gebot", Storage="_Schriftliches_Gebot", ThisKey="Kundennummer", OtherKey="Kundennummer")]
		public EntitySet<Schriftliches_Gebot> Schriftliches_Gebot
		{
			get
			{
				return this._Schriftliches_Gebot;
			}
			set
			{
				this._Schriftliches_Gebot.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Lose(Lose entity)
		{
			this.SendPropertyChanging();
			entity.Kunden = this;
		}
		
		private void detach_Lose(Lose entity)
		{
			this.SendPropertyChanging();
			entity.Kunden = null;
		}
		
		private void attach_Schriftliches_Gebot(Schriftliches_Gebot entity)
		{
			this.SendPropertyChanging();
			entity.Kunden = this;
		}
		
		private void detach_Schriftliches_Gebot(Schriftliches_Gebot entity)
		{
			this.SendPropertyChanging();
			entity.Kunden = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lose")]
	public partial class Lose : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LosNummer;
		
		private string _Bezeichnung;
		
		private string _Anmerkung;
		
		private int _AuktionsNummer;
		
		private System.Nullable<int> _Kaeufer;
		
		private System.Nullable<int> _ZuschlagPreis;
		
		private int _MindestGebot;
		
		private System.Nullable<bool> _Valid;
		
		private string _Grund;
		
		private System.Nullable<bool> _Mehrwertsteuer;
		
		private EntitySet<Gebot> _Gebot;
		
		private EntityRef<Auktion> _Auktion;
		
		private EntityRef<Kunden> _Kunden;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLosNummerChanging(int value);
    partial void OnLosNummerChanged();
    partial void OnBezeichnungChanging(string value);
    partial void OnBezeichnungChanged();
    partial void OnAnmerkungChanging(string value);
    partial void OnAnmerkungChanged();
    partial void OnAuktionsNummerChanging(int value);
    partial void OnAuktionsNummerChanged();
    partial void OnKaeuferChanging(System.Nullable<int> value);
    partial void OnKaeuferChanged();
    partial void OnZuschlagPreisChanging(System.Nullable<int> value);
    partial void OnZuschlagPreisChanged();
    partial void OnMindestGebotChanging(int value);
    partial void OnMindestGebotChanged();
    partial void OnValidChanging(System.Nullable<bool> value);
    partial void OnValidChanged();
    partial void OnGrundChanging(string value);
    partial void OnGrundChanged();
    partial void OnMehrwertsteuerChanging(System.Nullable<bool> value);
    partial void OnMehrwertsteuerChanged();
    #endregion
		
		public Lose()
		{
			this._Gebot = new EntitySet<Gebot>(new Action<Gebot>(this.attach_Gebot), new Action<Gebot>(this.detach_Gebot));
			this._Auktion = default(EntityRef<Auktion>);
			this._Kunden = default(EntityRef<Kunden>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LosNummer", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LosNummer
		{
			get
			{
				return this._LosNummer;
			}
			set
			{
				if ((this._LosNummer != value))
				{
					this.OnLosNummerChanging(value);
					this.SendPropertyChanging();
					this._LosNummer = value;
					this.SendPropertyChanged("LosNummer");
					this.OnLosNummerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bezeichnung", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Bezeichnung
		{
			get
			{
				return this._Bezeichnung;
			}
			set
			{
				if ((this._Bezeichnung != value))
				{
					this.OnBezeichnungChanging(value);
					this.SendPropertyChanging();
					this._Bezeichnung = value;
					this.SendPropertyChanged("Bezeichnung");
					this.OnBezeichnungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anmerkung", DbType="VarChar(255)")]
		public string Anmerkung
		{
			get
			{
				return this._Anmerkung;
			}
			set
			{
				if ((this._Anmerkung != value))
				{
					this.OnAnmerkungChanging(value);
					this.SendPropertyChanging();
					this._Anmerkung = value;
					this.SendPropertyChanged("Anmerkung");
					this.OnAnmerkungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuktionsNummer", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AuktionsNummer
		{
			get
			{
				return this._AuktionsNummer;
			}
			set
			{
				if ((this._AuktionsNummer != value))
				{
					if (this._Auktion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuktionsNummerChanging(value);
					this.SendPropertyChanging();
					this._AuktionsNummer = value;
					this.SendPropertyChanged("AuktionsNummer");
					this.OnAuktionsNummerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kaeufer", DbType="Int")]
		public System.Nullable<int> Kaeufer
		{
			get
			{
				return this._Kaeufer;
			}
			set
			{
				if ((this._Kaeufer != value))
				{
					if (this._Kunden.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKaeuferChanging(value);
					this.SendPropertyChanging();
					this._Kaeufer = value;
					this.SendPropertyChanged("Kaeufer");
					this.OnKaeuferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZuschlagPreis", DbType="Int")]
		public System.Nullable<int> ZuschlagPreis
		{
			get
			{
				return this._ZuschlagPreis;
			}
			set
			{
				if ((this._ZuschlagPreis != value))
				{
					this.OnZuschlagPreisChanging(value);
					this.SendPropertyChanging();
					this._ZuschlagPreis = value;
					this.SendPropertyChanged("ZuschlagPreis");
					this.OnZuschlagPreisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MindestGebot", DbType="Int NOT NULL")]
		public int MindestGebot
		{
			get
			{
				return this._MindestGebot;
			}
			set
			{
				if ((this._MindestGebot != value))
				{
					this.OnMindestGebotChanging(value);
					this.SendPropertyChanging();
					this._MindestGebot = value;
					this.SendPropertyChanged("MindestGebot");
					this.OnMindestGebotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valid", DbType="Bit")]
		public System.Nullable<bool> Valid
		{
			get
			{
				return this._Valid;
			}
			set
			{
				if ((this._Valid != value))
				{
					this.OnValidChanging(value);
					this.SendPropertyChanging();
					this._Valid = value;
					this.SendPropertyChanged("Valid");
					this.OnValidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grund", DbType="VarChar(255)")]
		public string Grund
		{
			get
			{
				return this._Grund;
			}
			set
			{
				if ((this._Grund != value))
				{
					this.OnGrundChanging(value);
					this.SendPropertyChanging();
					this._Grund = value;
					this.SendPropertyChanged("Grund");
					this.OnGrundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mehrwertsteuer", DbType="Bit")]
		public System.Nullable<bool> Mehrwertsteuer
		{
			get
			{
				return this._Mehrwertsteuer;
			}
			set
			{
				if ((this._Mehrwertsteuer != value))
				{
					this.OnMehrwertsteuerChanging(value);
					this.SendPropertyChanging();
					this._Mehrwertsteuer = value;
					this.SendPropertyChanged("Mehrwertsteuer");
					this.OnMehrwertsteuerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lose_Gebot", Storage="_Gebot", ThisKey="LosNummer,AuktionsNummer", OtherKey="LosId,AuktionsNummer")]
		public EntitySet<Gebot> Gebot
		{
			get
			{
				return this._Gebot;
			}
			set
			{
				this._Gebot.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Auktion_Lose", Storage="_Auktion", ThisKey="AuktionsNummer", OtherKey="AuktionsNummer", IsForeignKey=true)]
		public Auktion Auktion
		{
			get
			{
				return this._Auktion.Entity;
			}
			set
			{
				Auktion previousValue = this._Auktion.Entity;
				if (((previousValue != value) 
							|| (this._Auktion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Auktion.Entity = null;
						previousValue.Lose.Remove(this);
					}
					this._Auktion.Entity = value;
					if ((value != null))
					{
						value.Lose.Add(this);
						this._AuktionsNummer = value.AuktionsNummer;
					}
					else
					{
						this._AuktionsNummer = default(int);
					}
					this.SendPropertyChanged("Auktion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kunden_Lose", Storage="_Kunden", ThisKey="Kaeufer", OtherKey="Kundennummer", IsForeignKey=true)]
		public Kunden Kunden
		{
			get
			{
				return this._Kunden.Entity;
			}
			set
			{
				Kunden previousValue = this._Kunden.Entity;
				if (((previousValue != value) 
							|| (this._Kunden.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kunden.Entity = null;
						previousValue.Lose.Remove(this);
					}
					this._Kunden.Entity = value;
					if ((value != null))
					{
						value.Lose.Add(this);
						this._Kaeufer = value.Kundennummer;
					}
					else
					{
						this._Kaeufer = default(Nullable<int>);
					}
					this.SendPropertyChanged("Kunden");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Gebot(Gebot entity)
		{
			this.SendPropertyChanging();
			entity.Lose = this;
		}
		
		private void detach_Gebot(Gebot entity)
		{
			this.SendPropertyChanging();
			entity.Lose = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Schriftliches_Gebot")]
	public partial class Schriftliches_Gebot : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Kundennummer;
		
		private int _AuktionsNummer;
		
		private System.Nullable<int> _Gesamtbetrag;
		
		private EntitySet<Zeile> _Zeile;
		
		private EntityRef<Auktion> _Auktion;
		
		private EntityRef<Kunden> _Kunden;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKundennummerChanging(int value);
    partial void OnKundennummerChanged();
    partial void OnAuktionsNummerChanging(int value);
    partial void OnAuktionsNummerChanged();
    partial void OnGesamtbetragChanging(System.Nullable<int> value);
    partial void OnGesamtbetragChanged();
    #endregion
		
		public Schriftliches_Gebot()
		{
			this._Zeile = new EntitySet<Zeile>(new Action<Zeile>(this.attach_Zeile), new Action<Zeile>(this.detach_Zeile));
			this._Auktion = default(EntityRef<Auktion>);
			this._Kunden = default(EntityRef<Kunden>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kundennummer", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Kundennummer
		{
			get
			{
				return this._Kundennummer;
			}
			set
			{
				if ((this._Kundennummer != value))
				{
					if (this._Kunden.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKundennummerChanging(value);
					this.SendPropertyChanging();
					this._Kundennummer = value;
					this.SendPropertyChanged("Kundennummer");
					this.OnKundennummerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuktionsNummer", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AuktionsNummer
		{
			get
			{
				return this._AuktionsNummer;
			}
			set
			{
				if ((this._AuktionsNummer != value))
				{
					if (this._Auktion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuktionsNummerChanging(value);
					this.SendPropertyChanging();
					this._AuktionsNummer = value;
					this.SendPropertyChanged("AuktionsNummer");
					this.OnAuktionsNummerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gesamtbetrag", DbType="Int")]
		public System.Nullable<int> Gesamtbetrag
		{
			get
			{
				return this._Gesamtbetrag;
			}
			set
			{
				if ((this._Gesamtbetrag != value))
				{
					this.OnGesamtbetragChanging(value);
					this.SendPropertyChanging();
					this._Gesamtbetrag = value;
					this.SendPropertyChanged("Gesamtbetrag");
					this.OnGesamtbetragChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Schriftliches_Gebot_Zeile", Storage="_Zeile", ThisKey="Kundennummer,AuktionsNummer", OtherKey="Kundennummer,AuktionsNummer")]
		public EntitySet<Zeile> Zeile
		{
			get
			{
				return this._Zeile;
			}
			set
			{
				this._Zeile.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Auktion_Schriftliches_Gebot", Storage="_Auktion", ThisKey="AuktionsNummer", OtherKey="AuktionsNummer", IsForeignKey=true)]
		public Auktion Auktion
		{
			get
			{
				return this._Auktion.Entity;
			}
			set
			{
				Auktion previousValue = this._Auktion.Entity;
				if (((previousValue != value) 
							|| (this._Auktion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Auktion.Entity = null;
						previousValue.Schriftliches_Gebot.Remove(this);
					}
					this._Auktion.Entity = value;
					if ((value != null))
					{
						value.Schriftliches_Gebot.Add(this);
						this._AuktionsNummer = value.AuktionsNummer;
					}
					else
					{
						this._AuktionsNummer = default(int);
					}
					this.SendPropertyChanged("Auktion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kunden_Schriftliches_Gebot", Storage="_Kunden", ThisKey="Kundennummer", OtherKey="Kundennummer", IsForeignKey=true)]
		public Kunden Kunden
		{
			get
			{
				return this._Kunden.Entity;
			}
			set
			{
				Kunden previousValue = this._Kunden.Entity;
				if (((previousValue != value) 
							|| (this._Kunden.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kunden.Entity = null;
						previousValue.Schriftliches_Gebot.Remove(this);
					}
					this._Kunden.Entity = value;
					if ((value != null))
					{
						value.Schriftliches_Gebot.Add(this);
						this._Kundennummer = value.Kundennummer;
					}
					else
					{
						this._Kundennummer = default(int);
					}
					this.SendPropertyChanged("Kunden");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Zeile(Zeile entity)
		{
			this.SendPropertyChanging();
			entity.Schriftliches_Gebot = this;
		}
		
		private void detach_Zeile(Zeile entity)
		{
			this.SendPropertyChanging();
			entity.Schriftliches_Gebot = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class Users : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Username;
		
		private string _Passwort;
		
		private int _Rechte;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswortChanging(string value);
    partial void OnPasswortChanged();
    partial void OnRechteChanging(int value);
    partial void OnRechteChanged();
    #endregion
		
		public Users()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Passwort", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Passwort
		{
			get
			{
				return this._Passwort;
			}
			set
			{
				if ((this._Passwort != value))
				{
					this.OnPasswortChanging(value);
					this.SendPropertyChanging();
					this._Passwort = value;
					this.SendPropertyChanged("Passwort");
					this.OnPasswortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rechte", DbType="Int NOT NULL")]
		public int Rechte
		{
			get
			{
				return this._Rechte;
			}
			set
			{
				if ((this._Rechte != value))
				{
					this.OnRechteChanging(value);
					this.SendPropertyChanging();
					this._Rechte = value;
					this.SendPropertyChanged("Rechte");
					this.OnRechteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
